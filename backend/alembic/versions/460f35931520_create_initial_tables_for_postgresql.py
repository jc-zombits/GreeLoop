"""Create initial tables for PostgreSQL

Revision ID: 460f35931520
Revises: 
Create Date: 2025-08-19 13:48:51.535914

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '460f35931520'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('slug', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('icon', sa.String(length=100), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('image_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('items_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=True)
    op.create_index(op.f('ix_categories_slug'), 'categories', ['slug'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=False),
    sa.Column('phone_verified', sa.Boolean(), nullable=False),
    sa.Column('reputation_score', sa.Float(), nullable=False),
    sa.Column('total_exchanges', sa.Integer(), nullable=False),
    sa.Column('successful_exchanges', sa.Integer(), nullable=False),
    sa.Column('show_phone', sa.Boolean(), nullable=False),
    sa.Column('show_email', sa.Boolean(), nullable=False),
    sa.Column('show_location', sa.Boolean(), nullable=False),
    sa.Column('email_notifications', sa.Boolean(), nullable=False),
    sa.Column('push_notifications', sa.Boolean(), nullable=False),
    sa.Column('sms_notifications', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.UUID(), nullable=False),
    sa.Column('condition', sa.Enum('NEW', 'LIKE_NEW', 'EXCELLENT', 'GOOD', 'FAIR', 'POOR', name='itemcondition'), nullable=False),
    sa.Column('status', sa.Enum('AVAILABLE', 'RESERVED', 'EXCHANGED', 'INACTIVE', name='itemstatus'), nullable=False),
    sa.Column('estimated_value', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('location_description', sa.String(length=500), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('allow_partial_exchange', sa.Boolean(), nullable=False),
    sa.Column('requires_meetup', sa.Boolean(), nullable=False),
    sa.Column('max_distance_km', sa.Integer(), nullable=False),
    sa.Column('preferred_categories', sa.Text(), nullable=True),
    sa.Column('exchange_preferences', sa.Text(), nullable=True),
    sa.Column('views_count', sa.Integer(), nullable=False),
    sa.Column('favorites_count', sa.Integer(), nullable=False),
    sa.Column('exchange_requests_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_viewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_items_category_id'), 'items', ['category_id'], unique=False)
    op.create_index(op.f('ix_items_condition'), 'items', ['condition'], unique=False)
    op.create_index(op.f('ix_items_id'), 'items', ['id'], unique=False)
    op.create_index(op.f('ix_items_is_active'), 'items', ['is_active'], unique=False)
    op.create_index(op.f('ix_items_owner_id'), 'items', ['owner_id'], unique=False)
    op.create_index(op.f('ix_items_status'), 'items', ['status'], unique=False)
    op.create_index(op.f('ix_items_title'), 'items', ['title'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('access_token', sa.String(length=500), nullable=False),
    sa.Column('refresh_token', sa.String(length=500), nullable=False),
    sa.Column('device_info', sa.Text(), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_revoked', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('last_activity', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('revoked_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_sessions_access_token'), 'user_sessions', ['access_token'], unique=True)
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.create_index(op.f('ix_user_sessions_is_active'), 'user_sessions', ['is_active'], unique=False)
    op.create_index(op.f('ix_user_sessions_refresh_token'), 'user_sessions', ['refresh_token'], unique=True)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_table('exchanges',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('requester_id', sa.UUID(), nullable=False),
    sa.Column('owner_id', sa.UUID(), nullable=False),
    sa.Column('requested_item_id', sa.UUID(), nullable=False),
    sa.Column('offered_item_id', sa.UUID(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'ACCEPTED', 'REJECTED', 'COUNTER_OFFERED', 'CONFIRMED', 'IN_PROGRESS', 'COMPLETED', 'CANCELLED', 'DISPUTED', name='exchangestatus'), nullable=False),
    sa.Column('initial_message', sa.Text(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('completion_notes', sa.Text(), nullable=True),
    sa.Column('meeting_location', sa.String(length=500), nullable=True),
    sa.Column('meeting_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('meeting_confirmed_by_requester', sa.Boolean(), nullable=False),
    sa.Column('meeting_confirmed_by_owner', sa.Boolean(), nullable=False),
    sa.Column('completed_by_requester', sa.Boolean(), nullable=False),
    sa.Column('completed_by_owner', sa.Boolean(), nullable=False),
    sa.Column('requires_additional_payment', sa.Boolean(), nullable=False),
    sa.Column('additional_payment_amount', sa.String(length=50), nullable=True),
    sa.Column('additional_payment_description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('accepted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('rejected_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['offered_item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['requested_item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['requester_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exchanges_id'), 'exchanges', ['id'], unique=False)
    op.create_index(op.f('ix_exchanges_offered_item_id'), 'exchanges', ['offered_item_id'], unique=False)
    op.create_index(op.f('ix_exchanges_owner_id'), 'exchanges', ['owner_id'], unique=False)
    op.create_index(op.f('ix_exchanges_requested_item_id'), 'exchanges', ['requested_item_id'], unique=False)
    op.create_index(op.f('ix_exchanges_requester_id'), 'exchanges', ['requester_id'], unique=False)
    op.create_index(op.f('ix_exchanges_status'), 'exchanges', ['status'], unique=False)
    op.create_table('item_images',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('item_id', sa.UUID(), nullable=False),
    sa.Column('image_url', sa.String(length=500), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('alt_text', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_item_images_id'), 'item_images', ['id'], unique=False)
    op.create_index(op.f('ix_item_images_item_id'), 'item_images', ['item_id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('sender_id', sa.UUID(), nullable=False),
    sa.Column('receiver_id', sa.UUID(), nullable=False),
    sa.Column('exchange_id', sa.UUID(), nullable=True),
    sa.Column('message_type', sa.Enum('TEXT', 'IMAGE', 'SYSTEM', 'EXCHANGE_UPDATE', name='messagetype'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('message_metadata', sa.Text(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_deleted_by_sender', sa.Boolean(), nullable=False),
    sa.Column('is_deleted_by_receiver', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['exchange_id'], ['exchanges.id'], ),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_exchange_id'), 'messages', ['exchange_id'], unique=False)
    op.create_index(op.f('ix_messages_id'), 'messages', ['id'], unique=False)
    op.create_index(op.f('ix_messages_is_read'), 'messages', ['is_read'], unique=False)
    op.create_index(op.f('ix_messages_receiver_id'), 'messages', ['receiver_id'], unique=False)
    op.create_index(op.f('ix_messages_sender_id'), 'messages', ['sender_id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('notification_type', sa.Enum('EXCHANGE_REQUEST', 'EXCHANGE_ACCEPTED', 'EXCHANGE_REJECTED', 'EXCHANGE_CONFIRMED', 'EXCHANGE_COMPLETED', 'EXCHANGE_CANCELLED', 'NEW_MESSAGE', 'RATING_RECEIVED', 'ITEM_VIEWED', 'SYSTEM_ANNOUNCEMENT', 'ACCOUNT_UPDATE', 'SECURITY_ALERT', name='notificationtype'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', name='notificationpriority'), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('action_url', sa.String(length=500), nullable=True),
    sa.Column('action_text', sa.String(length=100), nullable=True),
    sa.Column('notification_metadata', sa.Text(), nullable=True),
    sa.Column('related_user_id', sa.UUID(), nullable=True),
    sa.Column('related_item_id', sa.UUID(), nullable=True),
    sa.Column('related_exchange_id', sa.UUID(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('send_email', sa.Boolean(), nullable=False),
    sa.Column('send_push', sa.Boolean(), nullable=False),
    sa.Column('send_sms', sa.Boolean(), nullable=False),
    sa.Column('email_sent', sa.Boolean(), nullable=False),
    sa.Column('push_sent', sa.Boolean(), nullable=False),
    sa.Column('sms_sent', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['related_exchange_id'], ['exchanges.id'], ),
    sa.ForeignKeyConstraint(['related_item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['related_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_index(op.f('ix_notifications_is_read'), 'notifications', ['is_read'], unique=False)
    op.create_index(op.f('ix_notifications_notification_type'), 'notifications', ['notification_type'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_table('ratings',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('rater_id', sa.UUID(), nullable=False),
    sa.Column('rated_id', sa.UUID(), nullable=False),
    sa.Column('exchange_id', sa.UUID(), nullable=False),
    sa.Column('overall_rating', sa.Float(), nullable=False),
    sa.Column('communication_rating', sa.Float(), nullable=True),
    sa.Column('punctuality_rating', sa.Float(), nullable=True),
    sa.Column('item_condition_rating', sa.Float(), nullable=True),
    sa.Column('friendliness_rating', sa.Float(), nullable=True),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('would_exchange_again', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.CheckConstraint('communication_rating IS NULL OR (communication_rating >= 1 AND communication_rating <= 5)', name='check_communication_rating_range'),
    sa.CheckConstraint('friendliness_rating IS NULL OR (friendliness_rating >= 1 AND friendliness_rating <= 5)', name='check_friendliness_rating_range'),
    sa.CheckConstraint('item_condition_rating IS NULL OR (item_condition_rating >= 1 AND item_condition_rating <= 5)', name='check_item_condition_rating_range'),
    sa.CheckConstraint('overall_rating >= 1 AND overall_rating <= 5', name='check_overall_rating_range'),
    sa.CheckConstraint('punctuality_rating IS NULL OR (punctuality_rating >= 1 AND punctuality_rating <= 5)', name='check_punctuality_rating_range'),
    sa.CheckConstraint('rater_id != rated_id', name='check_different_users'),
    sa.CheckConstraint('would_exchange_again IS NULL OR would_exchange_again IN (0, 1)', name='check_would_exchange_again'),
    sa.ForeignKeyConstraint(['exchange_id'], ['exchanges.id'], ),
    sa.ForeignKeyConstraint(['rated_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['rater_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ratings_exchange_id'), 'ratings', ['exchange_id'], unique=False)
    op.create_index(op.f('ix_ratings_id'), 'ratings', ['id'], unique=False)
    op.create_index(op.f('ix_ratings_overall_rating'), 'ratings', ['overall_rating'], unique=False)
    op.create_index(op.f('ix_ratings_rated_id'), 'ratings', ['rated_id'], unique=False)
    op.create_index(op.f('ix_ratings_rater_id'), 'ratings', ['rater_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ratings_rater_id'), table_name='ratings')
    op.drop_index(op.f('ix_ratings_rated_id'), table_name='ratings')
    op.drop_index(op.f('ix_ratings_overall_rating'), table_name='ratings')
    op.drop_index(op.f('ix_ratings_id'), table_name='ratings')
    op.drop_index(op.f('ix_ratings_exchange_id'), table_name='ratings')
    op.drop_table('ratings')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_notification_type'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_is_read'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_messages_sender_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_receiver_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_is_read'), table_name='messages')
    op.drop_index(op.f('ix_messages_id'), table_name='messages')
    op.drop_index(op.f('ix_messages_exchange_id'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('ix_item_images_item_id'), table_name='item_images')
    op.drop_index(op.f('ix_item_images_id'), table_name='item_images')
    op.drop_table('item_images')
    op.drop_index(op.f('ix_exchanges_status'), table_name='exchanges')
    op.drop_index(op.f('ix_exchanges_requester_id'), table_name='exchanges')
    op.drop_index(op.f('ix_exchanges_requested_item_id'), table_name='exchanges')
    op.drop_index(op.f('ix_exchanges_owner_id'), table_name='exchanges')
    op.drop_index(op.f('ix_exchanges_offered_item_id'), table_name='exchanges')
    op.drop_index(op.f('ix_exchanges_id'), table_name='exchanges')
    op.drop_table('exchanges')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_refresh_token'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_is_active'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_index(op.f('ix_user_sessions_access_token'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_items_title'), table_name='items')
    op.drop_index(op.f('ix_items_status'), table_name='items')
    op.drop_index(op.f('ix_items_owner_id'), table_name='items')
    op.drop_index(op.f('ix_items_is_active'), table_name='items')
    op.drop_index(op.f('ix_items_id'), table_name='items')
    op.drop_index(op.f('ix_items_condition'), table_name='items')
    op.drop_index(op.f('ix_items_category_id'), table_name='items')
    op.drop_table('items')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_categories_slug'), table_name='categories')
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
